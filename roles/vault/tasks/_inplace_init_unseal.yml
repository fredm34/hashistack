---
- name: Init first node
  include_tasks: "_inplace_init.yml"
  when: __hs_vault_is_first_master

- name: Wait until vault is started
  ansible.builtin.service_facts:
  register: temp__service_facts
  until: temp__service_facts.ansible_facts.services['vault.service'].state == "running"
  retries : 50
  delay: 5
  tags: unseal
  
- name: Wait for port 8200 to become open on the host, don't start checking for 10 seconds
  ansible.builtin.wait_for:
    port: 8200
    delay: 10
  tags: unseal

- name: Assert that vault started
  assert:
    that:
      - ansible_facts.services['vault.service'].state == "running"
    fail_msg: "failure vault is not started"
    success_msg: "success, vault is started"
  tags: unseal
  
- name: Unseal first node
  include_tasks: "_inplace_unseal.yml"
  vars:
    vault_unseal_target: "{{ [groups[hs_vault_inventory_masters_group][0]] }}"
  tags: unseal

- name: Get vault status
  uri:
    url: "{{ __hs_vault_api.status }}"
    return_content: true
  register: _current_vault_status
  environment:
    SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
  when: __hs_vault_is_first_master
  retries: 10
  delay: 10
  until:
    - _current_vault_status.status == 200
    - not _current_vault_status.json.sealed

- name: Handling first init variable propagation
  set_fact:
    vault_init_content: "{{ hostvars[groups[hs_vault_inventory_masters_group][0]].vault_init_content }}"
  when:
    - inventory_hostname in groups[hs_vault_inventory_masters_group][1:]
    - vault_init_content is not defined

- name: Assert unseal keys content
  assert:
    that:
      - vault_init_content is defined
  no_log: true

- name: Unseal other nodes
  include_tasks: "_inplace_unseal.yml"
  vars:
    vault_unseal_target: "{{ groups[hs_vault_inventory_masters_group][1:] }}"
